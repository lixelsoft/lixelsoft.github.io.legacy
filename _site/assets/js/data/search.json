[
  
  {
    "title": "Firebase CloudFunction Security",
    "url": "/posts/firebase-cloudfunction-security/",
    "categories": "Firebase, CloudFunction",
    "tags": "firebase, cloudfunctio security",
    "date": "2021-08-31 06:00:00 +0900",
    





    "snippet": "Intro생각해보니 CloudFunction에 보안을 적용 안해서 개나소나 전부 정보를 획득할수 있었다.이번장에서는 Firebase Token을 이욯해서 검증된 사용자에게만 요청에 대한 응답을 주도록 구현해 보도록 하겠다.작성중…References  https://github.com/firebase/functions-samples/tree/main/authorized-https-endpoint"
  },
  
  {
    "title": "Code Convension",
    "url": "/posts/unity-memo-copy/",
    "categories": "Unity, Unity Memo",
    "tags": "unity, csharp, convension",
    "date": "2021-08-31 01:00:00 +0900",
    





    "snippet": "Code ConvensionIntro생각들 정리하는 차원에서 Code Convension 정리하는 글이나 작성해야겠다.앞으로 꾸준히 변경사항이 있으면 Update하도록 하자.Convension  모든 네이밍은 CamelCase  this는 사용하지 않는다.  Indent는 2칸  {}는 개행 없이  파일명: 첫 글자 대문자 (class와 동일하게)  namespace : 첫 글자 대문자  class :  첫 글자 대문자  public 변수 : 첫 글자 대문자  private 변수 : _ + 첫 글자 소문자  함수명 : 첫 글자..."
  },
  
  {
    "title": "Firebase CloudFunction 시작하기",
    "url": "/posts/firebase-cloudfunction/",
    "categories": "Firebase, CloudFunction",
    "tags": "firebase, cloudfunction",
    "date": "2021-08-29 01:00:00 +0900",
    





    "snippet": "Install# firebase cli 설치.$ npm install -g firebase-tools# 구글 계정으로 로그인.$ firebase login# 새로운 프로젝트 폴더를 생성하고 해당 폴더로 이동.$ mkdir Test &amp;amp;&amp;amp; cd ./Test# 해당 프로젝트 폴더에서 firebase initialize를 해준다.$ firebase initFirebase Install  아래와 같이 어떤 features를 선택할지 정해주는 메뉴가 나오는데 여기서 Functions를 선택해준다.주의할 점은 ..."
  },
  
  {
    "title": "Firebase CloudFunction 사용해서 인앱결제 검증하기 -1-",
    "url": "/posts/unity-firebase-cloudfunction-iapverify-1/",
    "categories": "Unity, Unity Firebase",
    "tags": "unity, firebase, iap",
    "date": "2021-08-28 01:00:00 +0900",
    





    "snippet": "Create API KeyGoogle Play Console 서비스 계정 등록      일단 영수증 검증에 사용할 API 계정을 만들어야 한다. Google Play Console -&amp;gt; 설정 -&amp;gt; API 액세스에 가서 새 서비스 계정 만들기를 클릭해서 계정 한개를 생성해 준다. 아마 아래와 같은 팝업창이 생성되고 Googole Cloud Platform으로 이동하라고 나올텐데 해당 사이트로 이동해준다.        Google Cloud Platform에서 서비스 계정 만들기를 클릭해 주고 새로운 계정..."
  },
  
  {
    "title": "Firebase CloudFunction 사용해서 푸시기능 구현하기",
    "url": "/posts/unity-firebase-cloudfunction-fcm/",
    "categories": "Unity, Unity Firebase",
    "tags": "unity, firebase, fcm",
    "date": "2021-08-28 01:00:00 +0900",
    





    "snippet": "작성중 …"
  },
  
  {
    "title": "InputField 키보드 엔터 처리",
    "url": "/posts/unity-memo-inputfield/",
    "categories": "Unity, Unity Memo",
    "tags": "unity, c#",
    "date": "2021-08-27 10:00:00 +0900",
    





    "snippet": "DescribeInputField 키보드의 status Listener를 등록한 후 해당 Event를 처리하면 된다.InputField Keyboard Event Listener 등록[SerializeField] TMP_InputField _inputField;private void Start() {  _inputField.onTouchScreenKeyboardStatusChanged.AddListener(OnTouchScreenKeyboardStatusChanged);}Keyboard Event 처리 함수 구현private ..."
  },
  
  {
    "title": "앱에서 다른 앱 실행하기 (with 변수 전달)",
    "url": "/posts/unity-memo-execapp/",
    "categories": "Unity, Unity Memo",
    "tags": "unity, csharp",
    "date": "2021-08-27 00:03:00 +0900",
    





    "snippet": "Sender App  public void SenderApp() {    AndroidJavaClass UnityPlayer = new AndroidJavaClass(&quot;com.unity3d.player.UnityPlayer&quot;);    AndroidJavaObject currentActivity = jc.GetStatic&amp;lt;AndroidJavaObject&amp;gt;(&quot;currentActivity&quot;);    AndroidJavaObject pm = currentActivity.Ca..."
  },
  
  {
    "title": "Process 실행 시간 확인",
    "url": "/posts/unity-processdiagnostics/",
    "categories": "Memo",
    "tags": "unity, csharp",
    "date": "2021-08-26 05:17:00 +0900",
    





    "snippet": "using System.Diagnostics;namespace lixelsoft {  public class Test {    public void ProcessDiagnostics() {      Stopwatch SW = new Stopwatch();      SW.Start();      float t = 1;      float k = 0.99f;      for(int i = 0; i&amp;lt; 100000; i++) {        float r = t * k;      }      SW.Stop();      ..."
  }
  
]

