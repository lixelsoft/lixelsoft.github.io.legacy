

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://lixelsoft.github.io/</id>
  <title>Lixelsoft</title>
  <subtitle>Lixelsoft Tech Blog</subtitle>
  <updated>2021-09-04T21:32:28+09:00</updated>
  <author>
    <name>Lixelsoft</name>
    <uri>https://lixelsoft.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://lixelsoft.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://lixelsoft.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Lixelsoft </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>emoji 모음 사이트</title>
    <link href="https://lixelsoft.github.io/posts/unity-github-emoji/" rel="alternate" type="text/html" title="emoji 모음 사이트" />
    <published>2021-09-04T05:17:00+09:00</published>
  
    <updated>2021-09-04T05:17:00+09:00</updated>
  
    <id>https://lixelsoft.github.io/posts/unity-github-emoji/</id>
    <content src="https://lixelsoft.github.io/posts/unity-github-emoji/" />
    <author>
      <name>Lixelsoft</name>
    </author>

  
    
    <category term="Memo" />
    
    <category term="github" />
    
  

  
    <summary>
      





      🖥 Site
😀😃😄😁😆⚽🎮✅🇰🇷

  https://wepplication.github.io/tools/charMap/#emoji


    </summary>
  

  </entry>

  
  <entry>
    <title>2021-09-04 Devlog</title>
    <link href="https://lixelsoft.github.io/posts/devlog-20210904/" rel="alternate" type="text/html" title="2021-09-04 Devlog" />
    <published>2021-09-04T03:00:00+09:00</published>
  
    <updated>2021-09-04T03:00:00+09:00</updated>
  
    <id>https://lixelsoft.github.io/posts/devlog-20210904/</id>
    <content src="https://lixelsoft.github.io/posts/devlog-20210904/" />
    <author>
      <name>Lixelsoft</name>
    </author>

  
    
    <category term="DevLog" />
    
    <category term="2021" />
    
  

  
    <summary>
      





      💻 Done List


✅ CloudFunction scheduler 구현.

  매일 특정 시간에 유저 전체에게 우편함 주는 함수 구현 완료.
  Firebase CloudFunction Scheduler 사용.


✅ 계정 2개 생성되는 버그

  내부테스트에 새로운 버전 올리면 구글쪽에서 새로 계정을 생성하는듯..


✅ IAP 매일 2배 기능 구현.

  영수증 검증 CloudFunction에서 체크해서 2배로 보상 주기 구현.
  UI에서도 구매 유무에 따라서 2배 이미지 On/Off.


✅ 폰에서 Firebase Dictionary&amp;lt;string, DateTime&amp;gt; AOT Error.

  컴터에서는 잘되는데 폰에서 에러남.
  Dictionary&amp;lt;string, object...
    </summary>
  

  </entry>

  
  <entry>
    <title>nodejs aes-128-cbc</title>
    <link href="https://lixelsoft.github.io/posts/nodejs-memo/" rel="alternate" type="text/html" title="nodejs aes-128-cbc" />
    <published>2021-09-02T00:00:00+09:00</published>
  
    <updated>2021-09-02T00:00:00+09:00</updated>
  
    <id>https://lixelsoft.github.io/posts/nodejs-memo/</id>
    <content src="https://lixelsoft.github.io/posts/nodejs-memo/" />
    <author>
      <name>Lixelsoft</name>
    </author>

  
    
    <category term="Nodejs" />
    
    <category term="Nodejs Memo" />
    
  

  
    <summary>
      





      

Memo

const crypto = require("crypto");

const algo = 'aes-128-cbc';
const key = "keykeykeykeykey";
const iv = "iviv";
const value = 'HelloWorld';
const keyBuffer = new Buffer.from(crypto.createHash('md5').update(key).digest('hex'),"hex");
const ivBuffer = new Buffer.from(crypto.createHash('md5').update(iv).digest('hex'),"hex");
const textBuffer = new Buffer.from(value);

// Encryption
let ci...
    </summary>
  

  </entry>

  
  <entry>
    <title>Firebase CloudFunction Security</title>
    <link href="https://lixelsoft.github.io/posts/firebase-cloudfunction-security/" rel="alternate" type="text/html" title="Firebase CloudFunction Security" />
    <published>2021-08-31T06:00:00+09:00</published>
  
    <updated>2021-08-31T06:00:00+09:00</updated>
  
    <id>https://lixelsoft.github.io/posts/firebase-cloudfunction-security/</id>
    <content src="https://lixelsoft.github.io/posts/firebase-cloudfunction-security/" />
    <author>
      <name>Lixelsoft</name>
    </author>

  
    
    <category term="Firebase" />
    
    <category term="CloudFunction" />
    
  

  
    <summary>
      





      Intro

생각해보니 CloudFunction에 보안을 적용 안해서 개나소나 전부 정보를 획득할수 있었다.
이번장에서는 Firebase Token을 이욯해서 검증된 사용자에게만 요청에 대한 응답을 주도록 구현해 보도록 하겠다.

작성중…

References



  https://github.com/firebase/functions-samples/tree/main/authorized-https-endpoint


    </summary>
  

  </entry>

  
  <entry>
    <title>Code Convension</title>
    <link href="https://lixelsoft.github.io/posts/unity-memo-copy/" rel="alternate" type="text/html" title="Code Convension" />
    <published>2021-08-31T01:00:00+09:00</published>
  
    <updated>2021-09-01T07:15:18+09:00</updated>
  
    <id>https://lixelsoft.github.io/posts/unity-memo-copy/</id>
    <content src="https://lixelsoft.github.io/posts/unity-memo-copy/" />
    <author>
      <name>Lixelsoft</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Memo" />
    
  

  
    <summary>
      





      Code Convension

Intro
생각들 정리하는 차원에서 Code Convension 정리하는 글이나 작성해야겠다.
앞으로 꾸준히 변경사항이 있으면 Update하도록 하자.



Convension


  모든 네이밍은 CamelCase
  this는 사용하지 않는다.
  Indent는 2칸
  {}는 개행 없이



  파일명: 첫 글자 대문자 (class와 동일하게)
  namespace : 첫 글자 대문자
  class :  첫 글자 대문자
  public 변수 : 첫 글자 대문자
  private 변수 : _ + 첫 글자 소문자
  함수명 : 첫 글자 대문자
  매개변수 : 첫 글자 소문자



// CodeConvensionExample.cs

namespace Lixelsoft {
...
    </summary>
  

  </entry>

</feed>

